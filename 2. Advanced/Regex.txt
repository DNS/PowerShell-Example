
-Match		# case insensitive
-IMatch		# case insensitive
-CMatch		# case sensitive

-NotMatch
-INotMatch
-CNotMatch

$s -Match ''

$s -Replace '',''		# doesn't modify $s
$s.Replace('text', 'pattern')	# modify $s
$s.Replace('text', 'pattern', 'OrdinalIgnoreCase')


# Capture match value #1
$string -match 'pattern'
$Matches

string -match ... and collection -match ... are two different operators. 
The first gets a Boolean value and fills $matches. The second gets each 
collection item that matches a pattern and apparently does not fill $matches.

# Capture match value #2
$string | Select-String "(F\d\d)" -AllMatches  | % Matches | % Value

# Capture group
$string | Select-String '(a)' -AllMatches | % Matches | % {$_.Groups[1].Value}



PowerShell's -Match only returns first match. You have to use Select-String with -AllMatches parameter or [regex]::Matches


-------------------

# .NET
$m = [regex]::Match($text, $pattern)
$m = [regex]::Matches($text, $pattern)
$m = [regex]::Replace($text, $pattern, $replacement)
$m.Groups
$m.Value
$m.Groups[1].Captures[0]



